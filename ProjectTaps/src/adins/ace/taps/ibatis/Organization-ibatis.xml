<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="organization">
	<typeAlias alias="organizationBean"
		type="adins.ace.taps.bean.organization.OrganizationBean" />

	<insert id="insertOrganization" parameterClass="organizationBean">
		INSERT INTO
		organizations (organization_code, organization_name, head_user_domain,
		organization_level, parent_organization_code, flag, created_by,
		created_date)
		VALUES(#organizationCode#, #organizationName#,
		#headDomain#, #organizationLevel#,
		#parentCode#,
		'ACTIVE',
		'domain100',
		SYSDATE)
	</insert>

	<select id="getOrganizationCode" resultClass="organizationBean">
		SELECT
		o.organization_code AS organizationCode,
		o.organization_name AS
		organizationName,
		e.first_name || ' ' || e.last_name AS headName,
		o.parent_organization_code AS parentCode,
		o.organization_level AS
		organizationLevel
		FROM organizations o
		LEFT JOIN
		employees e
		ON
		o.head_user_domain = e.user_domain where
		o.organization_code=UPPER(#organizationCode#)
	</select>

	<update id="editOrganization" parameterClass="organizationBean">
		UPDATE
		organizations SET
		organization_name = #organizationName#,
		organization_level = #organizationLevel#,
		updated_by = 'domain100',
		updated_date = SYSDATE
		WHERE organization_code=UPPER(#organizationCode#)
	</update>

	<select id="countOrganizations" resultClass="int"
		parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM organizations o
		LEFT
		JOIN
		employees e
		ON
		o.head_user_domain =
		e.user_domain
		WHERE
		LOWER(o.flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="organizationCode">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="organizationName">(LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="headName">(LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="all">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%') OR LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%') OR LOWER(e.first_name) 
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER ('%$keyword$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		START
		WITH
		o.organization_code = 'MAN'
		CONNECT
		BY
		PRIOR
		o.organization_code
		=
		o.parent_organization_code
	</select>

	<select id="searchOrganizations" resultClass="organizationBean"
		parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM (
		SELECT LPAD
		(o.organization_code,LENGTH
		(o.organization_code) + (LEVEL * 2) -
		2,'-')
		AS organizationCode,
		o.organization_name AS organizationName,
		e.first_name || ' ' || e.last_name AS headName
		FROM organizations o
		LEFT
		JOIN
		employees e
		ON o.head_user_domain =
		e.user_domain
		WHERE
		LOWER(o.flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="organizationCode">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="organizationName">(LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="headName">(LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="all">LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%') OR LOWER(o.organization_name)
						LIKE LOWER
						('%$keyword$%') OR LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%')
						OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%')
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		START WITH
		o.organization_level = 0
		CONNECT
		BY
		PRIOR
		o.organization_code =
		o.parent_organization_code
		)
		a
		WHERE  <![CDATA[ ROWNUM <= #end#]]>
		)
		WHERE  <![CDATA[ seqnum >= #start#]]>
	</select>

<!-- 	<update id="editOrganization" parameterClass="organizationBean"> -->
<!-- 		UPDATE -->
<!-- 		organizations SET -->
<!-- 		organization_name = $organizationName$, -->
<!-- 		head_user_domain = $headDomain$, -->
<!-- 		organization_level = -->
<!-- 		$organizationLevel$, -->
<!-- 		parent_organization_code = $parentCode$, -->
<!-- 		updated_by = #sessionUserDomain#, -->
<!-- 		updated_date = SYSDATE -->
<!-- 		WHERE -->
<!-- 		organization_code = $organizationCode$ -->
<!-- 	</update> -->

	<delete id="deleteOrganization" parameterClass="java.lang.String">
		UPDATE
		organizations SET
		flag = 'INACTIVE'
		WHERE organization_code =
		#organization_code#
	</delete>

</sqlMap>
