<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="organization">
	<typeAlias alias="organizationBean"
		type="adins.ace.taps.bean.organization.OrganizationBean" />

	<insert id="insertOrganization" parameterClass="organizationBean">
		INSERT INTO
		organizations (organization_code, organization_name, head_user_domain,
		organization_level, parent_organization_code, flag, created_by,
		created_date)
		VALUES(UPPER(#organizationCode#), #organizationName#,
		#headDomain#, #organizationLevel#,
		#parentCode#,
		'ACTIVE',
		#sessionUserDomain#,
		SYSDATE)
	</insert>

	<insert id="insertRole" parameterClass="organizationBean">
		INSERT INTO
		employee_role
		(role_id, user_domain)
		VALUES ('HBU', #headDomain#)
	</insert>

	<insert id="insertRoleSPV" parameterClass="organizationBean">
		INSERT INTO
		employee_role
		(role_id, user_domain)
		VALUES ('SPV', #headDomain#)
	</insert>

	<delete id="deleteRole" parameterClass="java.lang.String">
		delete from employee_role
		where
		user_domain =#headDomain# AND role_id='HBU'
	</delete>

	<delete id="deleteRoleSPV" parameterClass="java.lang.String">
		delete from
		employee_role
		where
		user_domain =#headDomain# AND role_id='SPV'
	</delete>

	<select id="getOrganizationCode" resultClass="organizationBean">
		SELECT
		o.organization_code AS organizationCode,
		o.organization_name AS
		organizationName,
		o.head_user_domain AS headDomain,
		e.first_name || ' '
		|| e.last_name AS headName,
		o.parent_organization_code AS parentCode,
		o.organization_level AS
		organizationLevel, r.organization_name as
		parentName
		FROM organizations
		o
		LEFT JOIN
		employees e
		ON
		o.head_user_domain
		= e.user_domain LEFT JOIN
		organizations r
		ON o.parent_organization_code
		= r.organization_code
		where
		UPPER(o.organization_code)=UPPER(#organizationCode#)
	</select>

	<update id="editOrganization" parameterClass="organizationBean">
		UPDATE
		organizations SET
		organization_name = #organizationName#,
		head_user_domain = #headDomain#,
		organization_level =
		#organizationLevel#,
		parent_organization_code = #parentCode#,
		updated_by = #sessionUserDomain#,
		updated_date = SYSDATE
		WHERE
		UPPER(organization_code)=UPPER(#organizationCode#)
	</update>

	<update id="editOrganizationWithChild" parameterClass="organizationBean">
		UPDATE
		organizations SET
		organization_name = #organizationName#,
		head_user_domain = #headDomain#,
		parent_organization_code =
		#parentCode#,
		updated_by = #sessionUserDomain#,
		updated_date = SYSDATE
		WHERE
		UPPER(organization_code)=UPPER(#organizationCode#)
	</update>

	<update id="updateReportAssignment" parameterClass="organizationBean">
		UPDATE
		assignments SET
		report_to = #headDomain#
		WHERE assignment_type = 'BU'
		AND
		UPPER(organization_code)=UPPER(#organizationCode#)
	</update>

	<update id="updateOrgCodeHBU" parameterClass="organizationBean">
		UPDATE employees
		SET organization_code = #organizationCode#
		WHERE user_domain = #headDomain#
	</update>
	
	<update id="updateDeleteOrgCodeHBU" parameterClass="organizationBean">
		UPDATE employees SET 
		organization_code = ''
		WHERE user_domain = #headDomain#
	</update>
	
	<update id="updateDeleteHBU" parameterClass="organizationBean">
		UPDATE organizations SET 
		head_user_domain = ''
		WHERE organization_code = #organizationCode#
	</update>
	
	<select id="countOrganizations" resultClass="int"
		parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM organizations o
		LEFT
		JOIN
		employees e
		ON
		o.head_user_domain =
		e.user_domain
		WHERE
		LOWER(o.flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="organizationCode">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="organizationName">(LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="headName">(LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="all">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%') OR LOWER(o.organization_name) LIKE
						LOWER ('%$keyword$%') OR LOWER(e.first_name)
						LIKE LOWER
						('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		START
		WITH
		o.organization_level = 0
		CONNECT
		BY
		PRIOR
		UPPER(o.organization_code)
		=
		UPPER(o.parent_organization_code)

	</select>

	<select id="countChildOrganizations" resultClass="int"
		parameterClass="java.lang.String">
		SELECT COUNT(1)
		AS totalChild FROM organizations
		WHERE
		UPPER(parent_organization_code)
		=UPPER
		(#organization_code#)
	</select>

	<select id="searchOrganizations" resultClass="organizationBean"
		parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM (
		SELECT LPAD
		(o.organization_code,LENGTH
		(o.organization_code) + (LEVEL * 2) -
		2,' ')
		AS organizationCode,
		o.organization_name AS organizationName,
		e.first_name || ' ' || e.last_name AS headName, r.organization_name as
		parentName, o.organization_level as organizationLevel
		FROM
		organizations o
		LEFT
		JOIN
		employees e
		ON o.head_user_domain
		=
		e.user_domain
		LEFT JOIN
		organizations r
		ON
		UPPER(o.parent_organization_code) =
		UPPER(r.organization_code)
		WHERE
		LOWER(o.flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="organizationCode">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="organizationName">(LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="headName">(LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="all">LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%') OR LOWER(o.organization_name)
						LIKE LOWER
						('%$keyword$%') OR LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%')
						OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%')
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		START WITH
		o.organization_level = 0
		CONNECT
		BY
		PRIOR
		UPPER(o.organization_code) =
		UPPER(o.parent_organization_code)
		)
		a
		WHERE  <![CDATA[ ROWNUM <= #end#]]>
		)
		WHERE  <![CDATA[ seqnum >= #start#]]>
	</select>

	<select id="searchParentOrganizations" resultClass="organizationBean"
		parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM (
		SELECT
		o.organization_code
		AS organizationCode,
		o.organization_name AS
		organizationName,
		e.first_name || ' ' || e.last_name AS headName,
		r.organization_name as
		parentName
		FROM organizations o
		LEFT
		JOIN
		employees
		e
		ON o.head_user_domain
		=
		e.user_domain
		LEFT JOIN
		organizations r
		ON
		UPPER(o.parent_organization_code) =
		UPPER(r.organization_code)
		WHERE
		LOWER(o.flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="organizationCode">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="organizationName">(LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="headName">(LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="all">LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%') OR LOWER(o.organization_name)
						LIKE LOWER
						('%$keyword$%') OR LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%')
						OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%')
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		<dynamic prepend="AND">
			<isNotNull property="level">
				<isNotEmpty property="level">
					o.organization_level = #level#
				</isNotEmpty>
			</isNotNull>
		</dynamic>

		)
		a
		WHERE  <![CDATA[ ROWNUM <= #end#]]>
		)
		WHERE  <![CDATA[ seqnum >= #start#]]>
	</select>

	<select id="countParentOrganizations" resultClass="int"
		parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM
		organizations o
		LEFT
		JOIN
		employees e
		ON
		o.head_user_domain
		=
		e.user_domain
		LEFT JOIN
		organizations r
		ON
		o.parent_organization_code =
		r.organization_code
		WHERE
		LOWER(o.flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="organizationCode">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="organizationName">(LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="headName">(LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="all">LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%') OR LOWER(o.organization_name)
						LIKE LOWER
						('%$keyword$%') OR LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%')
						OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%')
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		<dynamic prepend="AND">
			<isNotNull property="level">
				<isNotEmpty property="level">
					o.organization_level = #level#
				</isNotEmpty>
			</isNotNull>
		</dynamic>
	</select>

	<select id="searchMemberOrganizations" resultClass="organizationBean"
		parameterClass="java.util.Map">
		SELECT * FROM (SELECT ROWNUM seqnum, a.* FROM ( SELECT user_domain AS
		memberDomain, employee_code AS memberCode, first_name || ' ' ||
		last_name AS memberName FROM employees WHERE UPPER(organization_code)
		= UPPER(#organization_code#) AND user_domain != #head_domain# AND
		LOWER(flag) = 'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="memberDomain">UPPER(user_domain)
						LIKE UPPER ('%$keyword$%')</isEqual>
					<isEqual property="category" compareValue="memberCode">UPPER(employee_code)
						LIKE UPPER ('%$keyword$%')</isEqual>
					<isEqual property="category" compareValue="memberName">
						(UPPER(first_name) LIKE UPPER (
						'%$keyword$%') OR UPPER(last_name)
						LIKE UPPER ('%$keyword$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isEqual property="category" compareValue="All">
					(
					(UPPER(user_domain)
					LIKE UPPER ('%$keyword$%')
					)
					OR
					(UPPER(employee_code)
					LIKE UPPER ('%$keyword$%'))
					OR
					((UPPER(first_name) LIKE UPPER (
					'%$keyword$%') OR UPPER(last_name)
					LIKE
					UPPER ('%$keyword$%')))
					)
				</isEqual>
			</isNotNull>
		</dynamic>
		)
		a
		WHERE  <![CDATA[ ROWNUM <= #end#]]>
		)
		WHERE  <![CDATA[ seqnum >= #start#]]>
	</select>

	<select id="countMemberOrganizations" resultClass="int"
		parameterClass="java.util.Map">
		SELECT
		COUNT(1)
		FROM employees
		WHERE UPPER(organization_code) =
		UPPER(#organization_code#) AND user_domain != #head_domain# AND
		LOWER(flag) = 'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="memberDomain">UPPER(user_domain)
						LIKE UPPER ('%$keyword$%')</isEqual>
					<isEqual property="category" compareValue="memberCode">UPPER(employee_code)
						LIKE UPPER ('%$keyword$%')</isEqual>
					<isEqual property="category" compareValue="memberName">
						(UPPER(first_name) LIKE UPPER (
						'%$keyword$%') OR UPPER(last_name)
						LIKE UPPER ('%$keyword$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isEqual property="category" compareValue="All">
					(
					(UPPER(user_domain)
					LIKE UPPER ('%$keyword$%')
					)
					OR
					(UPPER(employee_code)
					LIKE UPPER ('%$keyword$%'))
					OR
					((UPPER(first_name) LIKE UPPER (
					'%$keyword$%') OR UPPER(last_name)
					LIKE
					UPPER ('%$keyword$%')))
					)
				</isEqual>
			</isNotNull>
		</dynamic>
	</select>

	<select id="selectOrganizationName" resultClass="java.lang.String"
		parameterClass="java.util.Map">
		SELECT organization_name AS organizationName
		FROM
		organizations
		WHERE organization_code = #organizationCode#
	</select>

	<select id="selectProject" resultClass="organizationBean"
		parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM (
		SELECT p.project_code as
		projectCode, p.project_name as projectName from projects p,
		organizations o
		where p.organization_code=o.organization_code AND
		o.organization_code=#organizationCode# AND p.flag='ACTIVE'
		)
		a
		WHERE  <![CDATA[ ROWNUM <= #end#]]>
		)
		WHERE  <![CDATA[ seqnum >= #start#]]>
	</select>

	<select id="selectChild" resultClass="organizationBean"
		parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM (
		SELECT
		organization_code
		as organizationCode, organization_name as organizationName
		FROM
		organizations
		WHERE
		UPPER(parent_organization_code) =
		UPPER(#organizationCode#) AND flag='ACTIVE'
		)
		a
		WHERE  <![CDATA[ ROWNUM <= #end#]]>
		)
		WHERE  <![CDATA[ seqnum >= #start#]]>

	</select>

	<select id="countSelectProject" resultClass="int"
		parameterClass="java.util.Map">
		SELECT COUNT (1)
		FROM projects p, organizations o
		WHERE
		p.organization_code = o.organization_code
		AND o.organization_code =
		#organizationCode#
		AND p.flag = 'ACTIVE'
	</select>

	<select id="countSelectChild" resultClass="int" parameterClass="java.util.Map">
		SELECT COUNT (1)
		FROM organizations
		WHERE
		UPPER(parent_organization_code) =
		UPPER(#organizationCode#) AND
		flag='ACTIVE'
	</select>

	<select id="countMember" resultClass="int" parameterClass="java.util.Map">
		SELECT
		COUNT(1)
		FROM employees e, organizations o
		WHERE
		UPPER(e.organization_code) =
		UPPER(#organizationCode#) AND
		e.organization_code=O.ORGANIZATION_CODE AND
		LOWER(e.flag) = 'active'
		AND e.user_domain != o.head_user_domain
	</select>

	<select id="countProject" resultClass="int" parameterClass="java.util.Map">
		SELECT
		COUNT(1)
		FROM projects
		WHERE UPPER(organization_code) =
		UPPER(#organization_code#) AND
		LOWER(flag) = 'active'
	</select>

	<select id="countRoleSPV" resultClass="int" parameterClass="java.lang.String">
		SELECT
		COUNT(1)
		FROM employee_role
		WHERE user_domain =
		#headDomain# AND
		role_id='SPV'
	</select>

	<select id="countDirectReport" resultClass="int" parameterClass="java.lang.String">
		SELECT COUNT (1)
		FROM project_structures
		WHERE directreport_user_domain
		= #headDomain# AND flag='ACTIVE'
	</select>

	<update id="updateAssignment" parameterClass="organizationBean">
		UPDATE assignments
		SET current_status = 'DELETED'
		WHERE assignment_type = 'BU'
		AND UPPER
		(organization_code) = UPPER (#organizationCode#)
		AND (current_status !=
		'APPROVED' OR current_status != 'REJECTED')
	</update>

	<delete id="deleteOrganization" parameterClass="java.lang.String">
		UPDATE
		organizations SET
		flag = 'INACTIVE'
		WHERE UPPER(organization_code) =
		UPPER(#organization_code#)
	</delete>
	<select id="checkChildOrganization" parameterClass="java.lang.String"
		resultClass="int">
		SELECT
		COUNT(1)
		FROM organizations
		WHERE
		UPPER(parent_organization_code) =
		UPPER(#organization_code#) AND
		flag='ACTIVE'
	</select>

	<select id="checkMemberOrganization" parameterClass="java.util.Map"
		resultClass="int">
		SELECT count(1)
		FROM employees
		WHERE organization_code =
		#organization_code# AND user_domain != #head_domain# AND LOWER(flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="memberDomain">UPPER(user_domain)
						LIKE UPPER ('%$keyword$%')</isEqual>
					<isEqual property="category" compareValue="memberCode">UPPER(employee_code)
						LIKE UPPER ('%$keyword$%')</isEqual>
					<isEqual property="category" compareValue="memberName">
						(UPPER(first_name) LIKE UPPER (
						'%$keyword$%') OR UPPER(last_name)
						LIKE UPPER ('%$keyword$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
	</select>
</sqlMap>
