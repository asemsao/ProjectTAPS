<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="transferProject">
	<select id="searchProject" resultClass="adins.ace.taps.bean.project.ProjectBean"
		parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM ( SELECT
		p.project_code AS
		projectCode,
		p.project_name AS projectName,
		SUBSTR(p.project_name,0,14)
		|| '...' AS projectShortName,
		p.client AS client,
		p.organization_code AS
		organizationCode,
		ph.phase_name AS phase,
		TO_CHAR ((SELECT max(transfer_date) FROM history_projects WHERE project_code = p.project_code), 'DD-MM-YYYY') AS startDate,
		to_char(p.end_date,'DD-MM-YYYY') AS endDate,
		(TRUNC (SYSDATE) - (SELECT to_date(max(transfer_date)) FROM history_projects WHERE project_code = p.project_code)) AS runningDay
		FROM
		projects p,
		phases ph
		WHERE
		p.phase_id =
		ph.phase_id
		AND LOWER(flag) = 'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="projectCode">
						(LOWER(p.project_code) LIKE LOWER ('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="projectName">
						(LOWER(p.project_name) LIKE LOWER ('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="client">
						(LOWER(p.client)
						LIKE LOWER ('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="phase">
						(LOWER(ph.phase_name) LIKE LOWER ('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="organization">
						LOWER(p.organization_code) LIKE LOWER
						('%$keyword$%')
					</isEqual>
					<isEqual property="category" compareValue="all">
						(
						(LOWER(p.project_code) LIKE LOWER ('%$keyword$%'))
						OR
						(LOWER(p.project_name) LIKE LOWER ('%$keyword$%'))
						OR
						(LOWER(p.client) LIKE LOWER ('%$keyword$%'))
						OR
						(LOWER(ph.phase_name) LIKE LOWER ('%$keyword$%'))
						OR
						LOWER(p.organization_code) LIKE LOWER
						('%$keyword$%')
						)
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		ORDER BY
		p.start_date DESC
		)
		a WHERE  <![CDATA[ ROWNUM <= #endP#]]>
		) WHERE  <![CDATA[ seqnum >= #startP#]]>
	</select>

	<select id="searchOrganization" resultClass="adins.ace.taps.bean.organization.OrganizationBean"
		parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM (
		SELECT LPAD
		(o.organization_code,LENGTH
		(o.organization_code) + (LEVEL * 2) -
		2,' ')
		AS organizationCode,
		o.organization_name AS organizationName,
		e.first_name || ' ' || e.last_name AS headName, r.organization_name as
		parentName, o.organization_level as organizationLevel
		FROM
		organizations o
		LEFT
		JOIN
		employees e
		ON o.head_user_domain
		=
		e.user_domain
		LEFT JOIN
		organizations r
		ON
		UPPER(o.parent_organization_code) =
		UPPER(r.organization_code)
		WHERE
		LOWER(o.flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="organizationCode">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="organizationName">(LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="headName">(LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="all">LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%') OR LOWER(o.organization_name)
						LIKE LOWER
						('%$keyword$%') OR LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%')
						OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%')
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		START WITH
		o.organization_level = 0
		CONNECT
		BY
		PRIOR
		UPPER(o.organization_code) =
		UPPER(o.parent_organization_code)
		)
		a
		WHERE  <![CDATA[ ROWNUM <= #endO#]]>
		)
		WHERE  <![CDATA[ seqnum >= #startO#]]>
	</select>

	<select id="getProjectById" resultClass="adins.ace.taps.bean.project.ProjectBean"
		parameterClass="java.lang.String">
		SELECT
		p.project_code AS projectCode,
		p.project_name AS
		projectName,
		p.client AS client,
		p.organization_code AS
		organizationCode,
		o.organization_name AS organizationName,
		p.phase_id AS
		phase,
		to_char(p.start_date,'DD-MM-YYYY') AS startDate,
		to_char(p.end_date,'DD-MM-YYYY') AS endDate,
		(TRUNC(SYSDATE) -
		p.start_date) AS runningDay,
		o.organization_name AS
		organizationName
		FROM
		projects p,
		organizations o
		WHERE
		p.organization_code = o.organization_code
		AND p.project_code =
		#projectCode#
	</select>

	<select id="getAllMemberByProjectId" resultClass="adins.ace.taps.bean.project.StructureProjectBean"
		parameterClass="java.lang.String">
		SELECT
		o.organization_name AS organizationName,
		p.project_code AS projectCode,
		p.project_name AS projectName,
		ps.project_role AS projectRole,
		e.first_name || ' ' || e.last_name AS
		assignee,
		emp.first_name || ' ' ||
		emp.last_name AS directReport,
		ps.assignee_user_domain AS
		assigneeUserDomain, ps.directreport_user_domain AS directReportUserDomain, (SELECT COUNT(1) FROM organizations z WHERE z.head_user_domain = ps.assignee_user_domain) AS headBU
		FROM
		organizations o,
		projects p,
		employees e,
		employees emp,
		project_structures ps
		WHERE
		p.project_code =
		ps.project_code
		AND o.organization_code =
		p.organization_code
		AND
		e.user_domain = ps.assignee_user_domain
		AND
		emp.user_domain =
		ps.directreport_user_domain
		AND ps.project_code =
		#projectCode#
	</select>
	
	<update id="updateTransferProject" parameterClass="java.util.Map">
	UPDATE projects SET organization_code = #orgCode#, end_date = TO_DATE(#newEstDate#, 'DD/MM/YYYY') WHERE project_code = #projectCode#
	</update>
	
	<update id="updateTransferMember" parameterClass="java.util.Map">
		UPDATE employees SET organization_code = #orgCode#
		WHERE user_domain IN ($listMember$)
	</update>
	
	<insert id="insertHistoryProject" parameterClass="java.util.Map">
		INSERT INTO history_projects (history_id, project_code, organization_after, organization_before, transfer_date, created_date, created_by)
		VALUES (sequence_history_projects.nextVal, #projectCode#, #orgCode#, #orgBefore#, SYSDATE, SYSDATE, #createdBy#)
	</insert>

	<select id="countAllProjectMember" resultClass="int"
		parameterClass="java.util.Map">
		SELECT
		COUNT (1)
		FROM
		organizations o,
		projects p,
		employees e,
		employees emp,
		project_structures ps
		WHERE
		p.project_code =
		ps.project_code
		AND o.organization_code =
		p.organization_code
		AND
		e.user_domain = ps.assignee_user_domain
		AND
		emp.user_domain =
		ps.directreport_user_domain
		AND ps.project_code =
		#projectCode#
		AND
		ps.flag='ACTIVE'
	</select>
	
	<select id="countProject" resultClass="int" parameterClass="java.util.Map">
		SELECT COUNT (1)
		FROM
		projects p,
		phases ph
		WHERE
		p.phase_id =
		ph.phase_id
		AND LOWER(flag) = 'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="projectCode">
						(LOWER(p.project_code) LIKE LOWER ('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="projectName">
						(LOWER(p.project_name) LIKE LOWER ('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="client">
						(LOWER(p.client)
						LIKE LOWER ('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="phase">
						(LOWER(ph.phase_name) LIKE LOWER ('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="organization">
						LOWER(p.organization_code) LIKE LOWER
						('%$keyword$%')
					</isEqual>
					<isEqual property="category" compareValue="all">
						(
						(LOWER(p.project_code) LIKE LOWER ('%$keyword$%'))
						OR
						(LOWER(p.project_name) LIKE LOWER ('%$keyword$%'))
						OR
						(LOWER(p.client) LIKE LOWER ('%$keyword$%'))
						OR
						(LOWER(ph.phase_name) LIKE LOWER ('%$keyword$%'))
						OR
						LOWER(p.organization_code) LIKE LOWER
						('%$keyword$%')
						)
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="countOrganization" resultClass="int"
		parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM organizations o
		LEFT
		JOIN
		employees e
		ON
		o.head_user_domain =
		e.user_domain
		WHERE
		LOWER(o.flag) =
		'active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="organizationCode">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="organizationName">(LOWER(o.organization_name)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="headName">(LOWER(e.first_name)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="all">(LOWER(o.organization_code)
						LIKE LOWER ('%$keyword$%') OR LOWER(o.organization_name) LIKE
						LOWER ('%$keyword$%') OR LOWER(e.first_name)
						LIKE LOWER
						('%$keyword$%') OR
						LOWER(e.last_name) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		START
		WITH
		o.organization_level = 0
		CONNECT
		BY
		PRIOR
		UPPER(o.organization_code)
		=
		UPPER(o.parent_organization_code)
	</select>
	
	<select id="getPhoto" resultClass="adins.ace.taps.bean.project.StructureProjectBean"
		parameterClass="java.lang.String">
		SELECT picture AS photo FROM employees WHERE user_domain = #userDomain#
	</select>
</sqlMap>
