<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="manageRole">
	<typeAlias alias="roleBean" type="adins.ace.taps.bean.manageRole.RoleBean" />
	<typeAlias alias="menuBean" type="adins.ace.taps.bean.manageRole.MenuBean" />
	<typeAlias alias="memberBean" type="adins.ace.taps.bean.manageRole.EmployeeBean" />
	<typeAlias alias="employeeRoleBean" type="adins.ace.taps.bean.manageRole.EmployeeRoleBean" />

	<select id="countMember" resultClass="int" parameterClass="java.util.Map">
		SELECT COUNT(1)
		from employees e, employee_role er
		where
		er.role_id=#roleId# and er.user_domain = e.user_domain and
		lower(e.flag)='active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="employeeDomain">(LOWER(e.USER_DOMAIN)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="employeeName">(LOWER(e.FIRST_NAME)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.LAST_NAME) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="All">(LOWER(e.USER_DOMAIN)
						LIKE LOWER ('%$keyword$%') OR LOWER(e.FIRST_NAME)
						LIKE LOWER
						('%$keyword$%') OR
						LOWER(e.LAST_NAME) LIKE LOWER ('%$keyword$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
	</select>

	<select id="searchListMember" resultClass="memberBean"
		parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM (select e.user_domain as
				employeeDomain, e.first_name||' '||e.last_name as employeeName,
				(select count(1) from employee_role empRole where
				empRole.user_domain=e.user_domain and role_id='ADM') as isAdmin
				from
				employees e, employee_role er
				where er.role_id=#roleId# and
				er.user_domain = e.user_domain and lower(e.flag)='active'
		<dynamic prepend="AND">
			<isNotNull property="keyword">
				<isNotEmpty property="keyword">
					<isEqual property="category" compareValue="employeeDomain">(LOWER(e.USER_DOMAIN)
						LIKE LOWER ('%$keyword$%'))</isEqual>
					<isEqual property="category" compareValue="employeeName">(LOWER(e.FIRST_NAME)
						LIKE LOWER ('%$keyword$%') OR
						LOWER(e.LAST_NAME) LIKE LOWER
						('%$keyword$%'))
					</isEqual>
					<isEqual property="category" compareValue="All">(LOWER(e.USER_DOMAIN)
						LIKE LOWER ('%$keyword$%') OR LOWER(e.FIRST_NAME)
						LIKE LOWER
						('%$keyword$%') OR
						LOWER(e.LAST_NAME) LIKE LOWER ('%$keyword$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		) a WHERE  <![CDATA[ ROWNUM <= #end#]]>)
		WHERE  <![CDATA[ seqnum >= #start#]]>
	</select>

	<select id="searchListRole" resultClass="roleBean"
		parameterClass="java.util.Map">
		select r.role_id as roleId, r.role_name as roleName, (select count(1) from employee_role where role_id = r.role_id) AS roleCount from
		roles r
	</select>

	<select id="searchListMenu" resultClass="menuBean"
		parameterClass="java.lang.String">
		select m.menu_id as menuId, m.menu_name as menuName,
		m.task as task, m.description as description,
		(select count(1) from role_menu rm where rm.role_id=#roleId# and rm.menu_id =
		m.menu_id) as isExist from menu m
	</select>

	<select id="searchListMemberNoPaging" resultClass="memberBean"
		parameterClass="java.lang.String">
		select e.user_domain as employeeDomain, e.first_name||'
		'||e.last_name as employeeName,
		(select count(1) from employee_role empRole where
		empRole.user_domain=e.user_domain and role_id='ADM') as isAdmin
		from
		employees e, employee_role er
		where er.role_id=#roleId# and
		er.user_domain = e.user_domain and lower(e.flag)='active'
	</select>
	
	<select id="getMenuName" resultClass="java.lang.String"
		parameterClass="java.lang.String">
		select menu_name from menu
		where menu_id = #menuId#
	</select>

	<select id="getRoleName" resultClass="java.lang.String"
		parameterClass="java.lang.String">
		select role_name as roleName from roles where role_id =
		#roleId#
	</select>

	<select id="getEmpName" resultClass="java.lang.String"
		parameterClass="java.lang.String">
		select first_name||' '||last_name from employees
		where
		user_domain = #userDomain#
	</select>

	<insert id="insertRoleAdmin" parameterClass="java.lang.String">
		insert into
		employee_role(user_domain,role_id) values (#userDomain#,'ADM')
	</insert>

	<delete id="deleteRoleAdmin" parameterClass="java.lang.String">
		delete from
		employee_role where role_id='ADM' and user_domain = #userDomain#
	</delete>

	<delete id="deleteRoleMenu" parameterClass="java.util.Map">
		delete from role_menu
		where role_id=#roleId#
	</delete>

	<insert id="insertRoleMenu" parameterClass="java.util.Map">
		insert into
		role_menu(role_id,menu_id) values (#roleId#,#menuId#)
	</insert>
	
	<select id="searchListEmployeeRole" resultClass="employeeRoleBean" parameterClass="java.util.Map">
		SELECT *
		FROM (SELECT ROWNUM seqnum, a.*
		FROM (
		SELECT e.user_domain AS employeeUserDomain, e.first_name || ' ' || e.last_name AS employeeName, (SELECT COUNT(1) FROM employee_role WHERE user_domain = e.user_domain AND role_id = 'EMP') AS isEmployee, (SELECT COUNT(1) FROM employee_role WHERE user_domain = e.user_domain AND role_id = 'SPV') AS isSupervisor, (SELECT COUNT(1) FROM employee_role WHERE user_domain = e.user_domain AND role_id = 'HBU') AS isHeadBU, (SELECT COUNT(1) FROM employee_role WHERE user_domain = e.user_domain AND role_id = 'ADM') AS isAdministrator FROM employees e
		WHERE 1 = 1
		<dynamic prepend="AND">
			<isNotNull property="searchKeywordER">
				<isNotEmpty property="searchKeywordER">
					<isEqual property="searchCategoryER" compareValue="employeeUserDomain">(LOWER(e.USER_DOMAIN)
						LIKE LOWER ('%$searchKeywordER$%'))</isEqual>
					<isEqual property="searchCategoryER" compareValue="employeeName">(LOWER(e.FIRST_NAME)
						LIKE LOWER ('%$searchKeywordER$%') OR
						LOWER(e.LAST_NAME) LIKE LOWER
						('%$searchKeywordER$%'))
					</isEqual>
					<isEqual property="searchCategoryER" compareValue="All">(LOWER(e.USER_DOMAIN)
						LIKE LOWER ('%$searchKeywordER$%') OR LOWER(e.FIRST_NAME)
						LIKE LOWER
						('%$searchKeywordER$%') OR
						LOWER(e.LAST_NAME) LIKE LOWER ('%$searchKeywordER$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
		) a WHERE  <![CDATA[ ROWNUM <= #endER#]]>)
		WHERE  <![CDATA[ seqnum >= #startER#]]>
	</select>
	
	<select id="countRecordER" resultClass="int" parameterClass="java.util.Map">
		SELECT COUNT(1) FROM employees e
		WHERE 1 = 1
		<dynamic prepend="AND">
			<isNotNull property="searchKeywordER">
				<isNotEmpty property="searchKeywordER">
					<isEqual property="searchCategoryER" compareValue="employeeUserDomain">(LOWER(e.USER_DOMAIN)
						LIKE LOWER ('%$searchKeywordER$%'))</isEqual>
					<isEqual property="searchCategoryER" compareValue="employeeName">(LOWER(e.FIRST_NAME)
						LIKE LOWER ('%$searchKeywordER$%') OR
						LOWER(e.LAST_NAME) LIKE LOWER
						('%$searchKeywordER$%'))
					</isEqual>
					<isEqual property="searchCategoryER" compareValue="All">(LOWER(e.USER_DOMAIN)
						LIKE LOWER ('%$searchKeywordER$%') OR LOWER(e.FIRST_NAME)
						LIKE LOWER
						('%$searchKeywordER$%') OR
						LOWER(e.LAST_NAME) LIKE LOWER ('%$searchKeywordER$%'))
					</isEqual>
				</isNotEmpty>
			</isNotNull>
		</dynamic>
	</select>

</sqlMap>